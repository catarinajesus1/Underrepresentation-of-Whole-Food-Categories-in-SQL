-- The following query shows us the unique IDsUSE bos_fmban_sql_analysis;SELECT a.id, a.categoryFROM ( SELECT *, ROW_NUMBER () OVER ( PARTITION BY id ORDER BY id) AS row_num       FROM bfmban_data ) as a WHERE row_num = 1;	-- Explanation of the 1st insight-- It was used the with the statement in a way to join all the tablesUSE bos_fmban_sql_analysis;WITH t1 AS( SELECT COUNT(data_entry_order) AS Whole_Foods_Brand,CASE WHEN category = 'BREAD ROLL AND BAKERY' THEN 'BREAD ROLLS AND BAKERY'WHEN category = 'DAIRY AND BUTTER' THEN 'DAIRY & EGGS'WHEN category = 'FROZEN FOOD' THEN 'FROZEN FOODS'WHEN category = 'SNACKS CHIPS SALSAS DIPS' THEN 'SNACKS CHIPS AND SALSAS DIPS'ELSE categoryEND AS CategoriesFROM (SELECT *,  ROW_NUMBER () OVER ( PARTITION BY id ORDER BY id) AS row_num       FROM bfmban_data ) as s1WHERE row_num = 1 AND s1.brand LIKE '%365%' OR '%WHOLE%' GROUP BY Categories),t2 AS (SELECT COUNT(data_entry_order) AS Not_Whole_Foods_Brand,CASE WHEN category = 'BREAD ROLL AND BAKERY' THEN 'BREAD ROLLS AND BAKERY'WHEN category = 'DAIRY AND BUTTER' THEN 'DAIRY & EGGS'WHEN category = 'FROZEN FOOD' THEN 'FROZEN FOODS'WHEN category = 'SNACKS CHIPS SALSAS DIPS' THEN 'SNACKS CHIPS AND SALSAS DIPS'ELSE categoryEND AS CategoriesFROM (SELECT *,  ROW_NUMBER () OVER ( PARTITION BY id ORDER BY id) AS row_num       FROM bfmban_data ) AS s2 WHERE row_num = 1 AND s2.brand NOT LIKE '%whole%' OR '%356%'GROUP BY Categories),t3 AS( SELECT COUNT(data_entry_order) AS Kosher_Whole_Foods_Brand,CASE WHEN category = 'BREAD ROLL AND BAKERY' THEN 'BREAD ROLLS AND BAKERY'WHEN category = 'DAIRY AND BUTTER' THEN 'DAIRY & EGGS'WHEN category = 'FROZEN FOOD' THEN 'FROZEN FOODS'WHEN category = 'SNACKS CHIPS SALSAS DIPS' THEN 'SNACKS CHIPS AND SALSAS DIPS'ELSE categoryEND AS CategoriesFROM (SELECT *,  ROW_NUMBER () OVER ( PARTITION BY id ORDER BY id) AS row_num       FROM bfmban_data ) as s1WHERE row_num = 1 AND s1.kosher = 1 AND s1.brand LIKE '%365%' OR '%WHOLE%' GROUP BY Categories),t4 AS (SELECT COUNT(data_entry_order) AS Not_Kosher_Whole_Foods_Brand,CASE WHEN category = 'BREAD ROLL AND BAKERY' THEN 'BREAD ROLLS AND BAKERY'WHEN category = 'DAIRY AND BUTTER' THEN 'DAIRY & EGGs'WHEN category = 'FROZEN FOOD' THEN 'FROZEN FOODS'WHEN category = 'SNACKS CHIPS SALSAS DIPS' THEN 'SNACKS CHIPS AND SALSAS DIPS'ELSE categoryEND AS CategoriesFROM (SELECT *,  ROW_NUMBER () OVER ( PARTITION BY id ORDER BY id) AS row_num       FROM bfmban_data ) AS s2WHERE row_num = 1 AND s2.kosher = 0 AND s2.brand NOT LIKE '%whole%' OR '%356%'GROUP BY Categories)SELECT t1.Categories, t1.Whole_Foods_Brand, t2.Not_Whole_Foods_Brand, t3.Kosher_Whole_Foods_Brand, t4.Not_Kosher_Whole_Foods_BrandFROM t2INNER JOIN t1 ON t1.Categories = t2.CategoriesINNER JOIN t3 ON t3.Categories = t2.CategoriesINNER JOIN t4 ON t4.Categories = t2.Categories;-- Explanation of the 2nd insight-- It was used the with the statement in a way to join all the tablesUSE bos_fmban_sql_analysis;WITH t1 AS( SELECT COUNT(data_entry_order) AS Vegan_Whole_Foods_Brand, FORMAT(AVG(regular_price),2) AS Whole_Foods_Brand_price,CASE WHEN category = 'BREAD ROLL AND BAKERY' THEN 'BREAD ROLLS AND BAKERY'WHEN category = 'DAIRY AND BUTTER' THEN 'DAIRY & EGGS'WHEN category = 'FROZEN FOOD' THEN 'FROZEN FOODS'WHEN category = 'SNACKS CHIPS SALSAS DIPS' THEN 'SNACKS CHIPS AND SALSAS DIPS'ELSE categoryEND AS CategoriesFROM (SELECT *,  ROW_NUMBER () OVER ( PARTITION BY id ORDER BY id) AS row_num       FROM bfmban_data ) as s1WHERE row_num = 1 AND s1.vegan = 1 AND s1.brand LIKE '%365%' OR '%WHOLE%'GROUP BY Categories),t2 AS (SELECT COUNT(data_entry_order) AS Vegan_Not_Whole_Foods_Brand, FORMAT(AVG(regular_price),2) AS Not_Whole_Foods_Brand_price,CASE WHEN category = 'BREAD ROLL AND BAKERY' THEN 'BREAD ROLLS AND BAKERY'WHEN category = 'DAIRY AND BUTTER' THEN 'DAIRY & EGGs'WHEN category = 'FROZEN FOOD' THEN 'FROZEN FOODS'WHEN category = 'SNACKS CHIPS SALSAS DIPS' THEN 'SNACKS CHIPS AND SALSAS DIPS'ELSE categoryEND AS CategoriesFROM (SELECT *,  ROW_NUMBER () OVER ( PARTITION BY id ORDER BY id) AS row_num       FROM bfmban_data ) AS s2WHERE row_num = 1 AND s2.vegan = 1 AND s2.brand  NOT LIKE '%whole%' OR '%everyday value%'  GROUP BY Categories)SELECT t1.Categories, t1.Vegan_Whole_Foods_Brand, t2.Vegan_Not_Whole_Foods_Brand,t1.Whole_Foods_Brand_price, t2.Not_Whole_Foods_Brand_priceFROM t2inner JOIN t1 ON t1.Categories = t2.CategoriesORDER BY 'Total' DESC;